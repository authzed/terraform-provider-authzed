openapi: 3.0.3
info:
  contact:
    email: support@authzed.com
  description: Cloud API for AuthZed Dedicated
  termsOfService: https://authzed.com/terms-conditions
  title: AuthZed Cloud API
  version: ""
externalDocs:
  description: Find out more at the official Authzed Docs site
  url: https://authzed.com/docs
servers:
- url: https://api.admin.stage.aws.authzed.net
tags:
- description: A permissions system defines a managed SpiceDB instance
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: permissions system
- description: Datastore APIs for managing the underlying data storage of a Permissions
    System
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs/spicedb/concepts/datastores
  name: datastore
- description: Set of APIs to for the fine-grained access management of a Permissions
    System
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs/authzed/concepts/restricted-api-access
  name: access management
- description: Set of APIs to for handling deployments. A permissions system is comprised
    of one or more deployments in the same and/or different regions
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: deployment
- description: Performance insights for a permissions system
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs/authzed/concepts/perf-insights
  name: performance insights
- description: System-level configuration and information
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: system
- description: Set of APIs to configure Materialize cache servers for a Permissions
    System
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs/authzed/concepts/authzed-materialize
  name: cache
- description: Set of APIs to configure Materialize cache servers for a Permissions
    System
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs/authzed/concepts/authzed-materialize
  name: materialize
- description: Organization management APIs
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: organization
- description: User management and profile APIs
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: user
- description: User metadata management APIs
  externalDocs:
    description: Find out more at the official Authzed Docs site
    url: https://authzed.com/docs
  name: metadata
paths:
  /channels:
    get:
      description: lists the available channels and versions that can be applied to
        a permissions system
      operationId: ListChannelsAndVersions
      parameters:
      - description: The kind of datastore for which to list channels and versions
          (e.g., cockroachdb, postgres, spanner)
        in: query
        name: dataStoreKind
        schema:
          description: The kind of datastore for which to list channels and versions
            (e.g., cockroachdb, postgres, spanner)
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelsAndVersionsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
  /datastore-templates:
    get:
      description: list all datastore templates available for provisioning
      operationId: ListDatastoreTemplates
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatastoreTemplatesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
  /datastores:
    get:
      description: list all datastore instances
      operationId: ListDatastores
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDatastoresResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
    post:
      description: create a new datastore instance using a template
      operationId: CreateDatastore
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDatastoreRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDatastoreResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
  /datastores/{datastoreId}:
    delete:
      description: delete a datastore instance
      operationId: DeleteDatastore
      parameters:
      - description: The ID of the datastore to delete
        in: path
        name: datastoreId
        required: true
        schema:
          description: The ID of the datastore to delete
          pattern: ^dbi-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
    get:
      description: get a datastore instance by its ID
      operationId: GetDatastore
      parameters:
      - description: The ID of the datastore to retrieve
        in: path
        name: datastoreId
        required: true
        schema:
          description: The ID of the datastore to retrieve
          pattern: ^dbi-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDatastoreResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
    put:
      description: update a datastore instance
      operationId: UpdateDatastore
      parameters:
      - description: The ID of the datastore to update
        in: path
        name: datastoreId
        required: true
        schema:
          description: The ID of the datastore to update
          pattern: ^dbi-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDatastoreRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDatastoreResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
      - datastore
  /deployment-templates:
    get:
      description: list all deployment templates available to an organization
      operationId: ListDeploymentTemplates
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentTemplatesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - deployment
  /deployment-templates/{deploymentTemplateID}:
    get:
      description: get a deployment template available to an organization by its ID
      operationId: GetDeploymentTemplate
      parameters:
      - description: The ID of the Deployment Template
        in: path
        name: deploymentTemplateID
        required: true
        schema:
          description: The ID of the Deployment Template
          example: dt-YUCnUAA7QFAyalREJboOH
          pattern: ^dt-[a-zA-Z0-9-]+$
          readOnly: true
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeploymentTemplateResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - deployment
  /organizations:
    get:
      description: list all organizations
      operationId: ListOrganizations
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
    post:
      description: create a new organization
      operationId: CreateOrganization
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
  /organizations/{organizationID}:
    delete:
      description: delete an organization by its ID. The organization must have no
        permission systems.
      operationId: DeleteOrganization
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
    get:
      description: get an organization by its ID
      operationId: GetOrganization
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
  /organizations/{organizationID}/payments:
    put:
      description: supply payment details for an organization
      operationId: AddOrganizationPaymentDetails
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOrganizationPaymentDetailsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
  /organizations/{organizationID}/roles:
    get:
      description: list all roles on an organization
      operationId: ListOrganizationRoles
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationRolesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
      - access management
    post:
      description: set a role on an organization
      operationId: SetOrganizationRole
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrganizationRoleRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
      - access management
  /organizations/{organizationID}/roles/{subjectId}:
    delete:
      description: delete a role on an organization
      operationId: DeleteOrganizationRole
      parameters:
      - description: The ID of the Organization
        in: path
        name: organizationID
        required: true
        schema:
          description: The ID of the Organization
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
      - description: The ID of the subject whose role is to be deleted
        in: path
        name: subjectId
        required: true
        schema:
          description: The ID of the subject whose role is to be deleted
          example: user-12345
          pattern: ^user-[\$a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
      - access management
  /organizations/internal:
    post:
      description: create a new organization as an internal user
      operationId: CreateOrganizationInternal
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrganizationInternalRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrganizationInternalResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
  /platform:
    get:
      description: get platform capabilities for the currently running instance
      operationId: GetPlatform
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPlatformResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - system
  /ps:
    get:
      description: list all permissions systems
      operationId: ListPermissionsSystems
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsSystemsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    post:
      description: create a new permissions system with associated database and secret
        resources
      operationId: CreatePermissionsSystem
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePermissionsSystemRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionsSystemResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}:
    delete:
      description: delete a permissions system by its ID. All associated resources
        will be deleted.
      operationId: DeletePermissionsSystem
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    get:
      description: get a permissions system by its ID
      operationId: GetPermissionsSystem
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsSystemResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    put:
      description: update a permissions system
      operationId: UpdatePermissionsSystem
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePermissionsSystemRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePermissionsSystemResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/access/policies:
    get:
      description: list all permission system access-management polices
      operationId: ListPolicies
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPoliciesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    post:
      description: create a permission system access-management policy
      operationId: CreatePolicy
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePolicyResponse'
          description: Created
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/policies/{policyID}:
    delete:
      description: delete a permission system access-management policy by its ID
      operationId: DeletePolicy
      parameters:
      - in: path
        name: policyID
        required: true
        schema:
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    get:
      description: get a permission system access-management policy by its ID
      operationId: GetPolicy
      parameters:
      - in: path
        name: policyID
        required: true
        schema:
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPolicyResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    put:
      description: update a permission system access-management policy
      operationId: UpdatePolicy
      parameters:
      - in: path
        name: policyID
        required: true
        schema:
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ETag of the Policy to update. If this does not match the
          current ETag, the update will be rejected.
        in: header
        name: If-Match
        schema:
          description: The ETag of the Policy to update. If this does not match the
            current ETag, the update will be rejected.
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePolicyResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/roles:
    get:
      description: list all permission system access-management roles
      operationId: ListRoles
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    post:
      description: create a permission system access-management role
      operationId: CreateRole
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: Created
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/roles/{roleID}:
    delete:
      description: delete a permission system access-management role by its ID
      operationId: DeleteRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    get:
      description: get a permission system access-management role by its ID
      operationId: GetRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRoleResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    put:
      description: update a permission system access-management role
      operationId: UpdateRole
      parameters:
      - in: path
        name: roleID
        required: true
        schema:
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ETag of the Role to update. If this does not match the current
          ETag, the update will be rejected.
        in: header
        name: If-Match
        schema:
          description: The ETag of the Role to update. If this does not match the
            current ETag, the update will be rejected.
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRoleResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/service-accounts:
    get:
      description: list all permission system access-management service accounts
      operationId: ListServiceAccounts
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServiceAccountsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    post:
      description: create a permission system access-management service account
      operationId: CreateServiceAccount
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServiceAccountRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateServiceAccountResponse'
          description: Created
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/service-accounts/{serviceAccountID}:
    delete:
      description: delete a permission system access-management service account by
        its ID. All referencing policies and associated tokens will be deleted.
      operationId: DeleteServiceAccount
      parameters:
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    get:
      description: get a permission system access-management service account by its
        ID
      operationId: GetServiceAccount
      parameters:
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceAccountResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    put:
      description: update a permission system access-management service account
      operationId: UpdateServiceAccount
      parameters:
      - description: The globally unique ID for this Service Account
        in: path
        name: serviceAccountID
        required: true
        schema:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ETag of the Service Account to update. If this does not match
          the current ETag, the update will be rejected.
        in: header
        name: If-Match
        schema:
          description: The ETag of the Service Account to update. If this does not
            match the current ETag, the update will be rejected.
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServiceAccountRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateServiceAccountResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/service-accounts/{serviceAccountID}/tokens:
    get:
      description: list all permission system access-management tokens under a service
        account
      operationId: ListTokens
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTokensResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    post:
      description: create a permission system access-management token under a service
        account
      operationId: CreateToken
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The globally unique ID for the containing Service Account
        in: path
        name: serviceAccountID
        required: true
        schema:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTokenResponse'
          description: Created
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/access/service-accounts/{serviceAccountID}/tokens/{tokenID}:
    delete:
      description: delete a permission system access-management token by its ID, under
        a service account
      operationId: DeleteToken
      parameters:
      - in: path
        name: tokenID
        required: true
        schema:
          pattern: ^atk-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    get:
      description: get a permission system access-management token by its ID, under
        a service account
      operationId: GetToken
      parameters:
      - in: path
        name: tokenID
        required: true
        schema:
          pattern: ^atk-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    put:
      description: update a permission system access-management token
      operationId: UpdateToken
      parameters:
      - in: path
        name: tokenID
        required: true
        schema:
          pattern: ^atk-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: serviceAccountID
        required: true
        schema:
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ETag of the Token to update. If this does not match the current
          ETag, the update will be rejected.
        in: header
        name: If-Match
        schema:
          description: The ETag of the Token to update. If this does not match the
            current ETag, the update will be rejected.
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTokenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTokenResponse'
          description: OK
          headers:
            ETag:
              description: The ETag of the configuration after the update.
              schema:
                description: The ETag of the configuration after the update.
                type: string
              style: simple
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/deployments:
    get:
      description: list all deployments for a permissions system
      operationId: ListDeployments
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeploymentsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    post:
      description: create a deployment for a permissions system
      operationId: CreateDeployment
      parameters:
      - description: The ID of the Permissions System to create the Deployment in
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System to create the Deployment in
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeploymentRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/deployments/{deploymentID}:
    delete:
      description: delete a deployment for a permissions system. All associated resources
        will be deleted.
      operationId: DeleteDeployment
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - in: path
        name: deploymentID
        required: true
        schema:
          pattern: ^dp-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    put:
      description: update a deployment for a permissions system
      operationId: UpdateDeployment
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ID of the Deployment to update
        in: path
        name: deploymentID
        required: true
        schema:
          description: The ID of the Deployment to update
          pattern: ^dp-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDeploymentRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/externalmetrics/tokens:
    get:
      description: get a token used to export metrics to Prometheus
      operationId: ListExternalMetricsToken
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExternalMetricsTokenResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    post:
      description: create a token that can be used to export metrics to Prometheus
      operationId: CreateExternalMetricsToken
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExternalMetricsTokenResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/externalmetrics/tokens/{id}:
    put:
      description: rotate a token used to export metrics to Prometheus
      operationId: RotateExternalMetricsToken
      parameters:
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The globally unique ID for this token
        in: path
        name: id
        required: true
        schema:
          description: The globally unique ID for this token
          pattern: ^em-[a-zA-Z0-9-_]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RotateExternalMetricsTokenResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/features/audit-log:
    get:
      description: get the current configuration of the audit log feature
      operationId: GetFeatureAuditLog
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureAuditLogResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    put:
      description: set the configuration for the audit log feature and enable the
        feature
      operationId: SetFeatureAuditLog
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFeatureAuditLogRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetFeatureAuditLogResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/features/datadog-export:
    get:
      description: get the current configuration of the datadog export feature
      operationId: GetFeatureDatadogExport
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeatureDatadogExportResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
    put:
      description: set the configuration for the datadog export feature and enable
        the feature
      operationId: SetFeatureDatadogExport
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetFeatureDatadogExportRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetFeatureDatadogExportResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /ps/{permissionsSystemID}/fgam/config:
    get:
      description: download FGAM configuration as YAML
      operationId: DownloadFGAMConfig
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadFGAMConfigResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
    post:
      description: upload FGAM configuration as YAML
      operationId: UploadFGAMConfig
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFGAMConfigRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - access management
  /ps/{permissionsSystemID}/materialize:
    get:
      description: list all materialize clusters for a permissions system
      operationId: ListMaterializeClusters
      parameters:
      - description: The ID of the Permission System Deployment
        in: query
        name: deploymentID
        schema:
          description: The ID of the Permission System Deployment
          example: dp-YUCnUAA7QFAyalREJboOH
          pattern: ^dp-[a-zA-Z0-9-]+$
          type: string
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListMaterializeClustersResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - cache
      - materialize
  /ps/{permissionsSystemID}/perf-insights/topk:
    get:
      description: get the top K most expensive permissions API calls
      operationId: PerformanceInsightsTopK
      parameters:
      - description: The time period to analyze. The default is the last hour.
        in: query
        name: period
        schema:
          $ref: '#/components/schemas/Period'
      - description: The number of top K items to return.
        in: query
        name: count
        schema:
          default: 10
          description: The number of top K items to return.
          maximum: 50
          minimum: 1
          type: integer
      - description: The field to sort the results by. The default is total impact,
          which is defined as P50 latency * count over the period.
        in: query
        name: sortBy
        schema:
          $ref: '#/components/schemas/SortBy'
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          readOnly: true
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfInsightsTopKResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - performance insights
  /ps/{permissionsSystemID}/perf-insights/topk-range:
    get:
      description: returns a range query over the top K most expensive permissions
        API calls
      operationId: PerformanceInsightsTopKRange
      parameters:
      - description: The time period to analyze. The default is the last hour.
        in: query
        name: period
        schema:
          $ref: '#/components/schemas/Period'
      - description: The number of times this API shape was called
        in: query
        name: count
        schema:
          description: The number of times this API shape was called
          type: integer
      - description: The field to sort the results by. The default is total impact,
          which is defined as P50 latency * count over the period.
        in: query
        name: sortBy
        schema:
          $ref: '#/components/schemas/SortBy'
      - description: The globally unique ID for the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          readOnly: true
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfInsightsTopKRangeResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - performance insights
  /ps/{permissionsSystemID}/roles:
    get:
      description: list all roles on a permissions systems
      operationId: ListPermissionsSystemRoles
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsSystemRolesResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
    post:
      description: set a role on a permissions system
      operationId: SetPermissionsSystemRole
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPermissionsSystemRoleRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
  /ps/{permissionsSystemID}/roles/{subjectId}:
    delete:
      description: delete a role on a permissions system
      operationId: DeletePermissionsSystemRole
      parameters:
      - description: The ID of the Permissions System
        in: path
        name: permissionsSystemID
        required: true
        schema:
          description: The ID of the Permissions System
          example: ps-YUCnUAA7QFAyalREJboOH
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The ID of the subject whose role is to be deleted
        in: path
        name: subjectId
        required: true
        schema:
          description: The ID of the subject whose role is to be deleted
          example: user-12345
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
  /ps/{permissionsSystemID}/tokens:
    get:
      description: list all preshared keys/tokens for a permissions system
      operationId: ListPermissionsSystemTokens
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsSystemTokensResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
    post:
      description: create a new preshared key/token for a permissions system
      operationId: CreatePermissionsSystemToken
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePermissionsSystemTokenResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
  /ps/{permissionsSystemID}/tokens/{tokenName}:
    delete:
      description: revokes a preshared key/token for a permissions system
      operationId: RevokePermissionsSystemToken
      parameters:
      - in: path
        name: permissionsSystemID
        required: true
        schema:
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      - description: The name/prefix of the token to revoke
        in: path
        name: tokenName
        required: true
        schema:
          description: The name/prefix of the token to revoke
          type: string
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "202":
          description: Accepted
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
      - access management
  /ps/estimated-cost:
    post:
      description: get estimated costs for a permissions system configuration
      operationId: PermissionsSystemEstimatedCost
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsSystemEstimatedCostRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsSystemEstimatedCostResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /regions:
    get:
      description: list all regions available for SpiceDB clusters
      operationId: ListRegions
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRegionsResponse'
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - permissions system
  /user/accept-invitation:
    post:
      description: accept a role invitation using an invitation code
      operationId: AcceptRoleInvitation
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptRoleInvitationRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptRoleInvitationResponse'
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
      - permissions system
      - access management
  /user/invite:
    post:
      description: send a role invitation via email for an organization or permissions
        system
      operationId: SendRoleInvitation
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRoleInvitationRequest'
      responses:
        "201":
          description: Created
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - organization
      - permissions system
      - access management
  /user/metadata:
    put:
      description: update the current authenticated user's metadata
      operationId: UpdateMyMetadata
      parameters:
      - description: The version of the API to use. Must be specified.
        in: header
        name: X-API-Version
        schema:
          default: internal
          description: The version of the API to use. Must be specified.
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyMetadataRequest'
      responses:
        "200":
          description: OK
        "400":
          description: Input parameters are incorrect
        "401":
          description: The credentials provided are invalid
        "403":
          description: Missing permission(s) to perform this operation
      security:
      - auth: []
      tags:
      - user
      - metadata
components:
  schemas:
    APICategory:
      enum:
      - check
      - lookup
      - write
      type: string
    APIShapeMetrics:
      properties:
        apiCategory:
          $ref: '#/components/schemas/APICategory'
        apiIndex:
          description: The index of the API call type; used for categorization and
            sorting
          type: integer
        apiName:
          description: The name of API call (e.g., ReadRelationships, CheckPermission,
            etc.)
          type: string
        count:
          description: The number of times this API shape was called
          nullable: true
          type: integer
        orderedShapeFields:
          description: The fields of the API shape in the order they should be displayed
          items:
            $ref: '#/components/schemas/ShapeField'
          nullable: true
          type: array
        p50LatencySeconds:
          description: The 50th percentile latency of this API shape over the period
          nullable: true
          type: number
        p95LatencySeconds:
          description: The 95th percentile latency of this API shape over the period
          nullable: true
          type: number
        p99LatencySeconds:
          description: The 99th percentile latency of this API shape over the period
          nullable: true
          type: number
        shapeFields:
          additionalProperties:
            type: string
          description: The fields of the API shape
          nullable: true
          type: object
        shapeID:
          description: The ID of the API shape
          type: string
      type: object
    AcceptRoleInvitationRequest:
      properties:
        email:
          description: The email address of the person accepting the invitation
          example: accepter@example.com
          maxLength: 255
          minLength: 1
          type: string
        invitationCode:
          description: The invitation code (JWT) to accept
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
          minLength: 1
          type: string
      required:
      - invitationCode
      - email
      type: object
    AcceptRoleInvitationResponse:
      properties:
        roleName:
          $ref: '#/components/schemas/InvitationRoleName'
        targetResourceId:
          description: The ID of the resource where the role was granted
          example: org-example
          maxLength: 255
          minLength: 1
          type: string
      type: object
    AddOrganizationPaymentDetailsResponse:
      properties:
        url:
          description: The Stripe checkout session URL
          example: https://checkout.stripe.com/pay/cs_test_...
          type: string
      required:
      - url
      type: object
    AuditLogFeatureConfig:
      properties:
        disabledOnMethods:
          description: A list of methods that will not be logged. If empty, all methods
            will be logged.
          items:
            type: string
          type: array
        streamName:
          description: The name of the destination sink.
          type: string
        targetConfiguration:
          additionalProperties:
            type: string
          description: Any target-specific fields for the destination sink.
          type: object
        targetEndpointUrl:
          description: The endpoint URL for the destination sink.
          type: string
        targetType:
          $ref: '#/components/schemas/AuditLogTargetType'
      required:
      - targetType
      - streamName
      type: object
    AuditLogTargetType:
      enum:
      - aws-kinesis
      - aws-firehose
      - aws-s3
      - gcp-cloud-storage
      type: string
    AuthzedRole:
      properties:
        kind:
          $ref: '#/components/schemas/RoleKind'
        metadata:
          $ref: '#/components/schemas/SubjectMetadata'
        subjectId:
          description: The ID of the subject this role applies to, e.g., 'user-12345'
          type: string
      required:
      - kind
      - subjectId
      type: object
    Capability:
      enum:
      - version_pinning
      - materialize
      - external_metrics_forwarding
      - role_management
      - administer_permissions_system
      - datastore_scaling
      type: string
    CloudKind:
      enum:
      - AWS
      - AZURE
      - GCLOUD
      - NONE
      - UNKNOWN
      type: string
    CloudProviderDetails:
      properties:
        awsAccountID:
          description: The AWS account ID associated with this Deployment. Will be
            empty if not applicable.
          type: string
        gcpServiceAccount:
          description: The GCP service account associated with this Deployment. Will
            be empty if not applicable.
          type: string
      type: object
    CloudWatchMetricExport:
      properties:
        enabled:
          type: boolean
        externalId:
          type: string
        logGroupName:
          type: string
        roleArn:
          type: string
        targetRegion:
          type: string
      type: object
    ClusterConfiguration:
      properties:
        dedicated:
          $ref: '#/components/schemas/DedicatedSpecification'
        deleteProtection:
          nullable: true
          type: string
        serverless:
          $ref: '#/components/schemas/ServerlessSpecification'
      type: object
    ClusterSpec:
      properties:
        cloudProvider:
          type: string
        clusterName:
          type: string
        configuration:
          $ref: '#/components/schemas/ClusterConfiguration'
        driftInterval:
          $ref: '#/components/schemas/Duration'
        labels:
          additionalProperties:
            type: string
          type: object
        metricExport:
          $ref: '#/components/schemas/MetricExportConfiguration'
        parentId:
          type: string
        plan:
          type: string
        regionName:
          type: string
        secretName:
          type: string
      type: object
    CockroachDBOverlapStrategy:
      enum:
      - request
      - prefix
      - static
      - insecure
      - unknown
      type: string
    CreateDatastoreRequest:
      properties:
        cockroachdb:
          $ref: '#/components/schemas/ClusterSpec'
        name:
          description: The name of the datastore instance
          maxLength: 55
          minLength: 1
          type: string
        template:
          description: The template name to use for provisioning
          type: string
      required:
      - name
      - template
      type: object
    CreateDatastoreResponse:
      properties:
        datastore:
          $ref: '#/components/schemas/Datastore'
      type: object
    CreateDeploymentRequest:
      properties:
        deploymentTemplateID:
          description: The ID of the Deployment Template to use for this Deployment
          example: dt-dev
          minLength: 1
          type: string
        name:
          description: The name of the Deployment
          maxLength: 64
          minLength: 1
          type: string
        regionId:
          description: The region where the Deployment will be created
          example: rg-us-west-2
          minLength: 1
          type: string
        replicas:
          description: The number of replicas on this Deployment
          maximum: 32
          minimum: 1
          type: integer
      required:
      - name
      - deploymentTemplateID
      - replicas
      - regionId
      type: object
    CreateExternalMetricsTokenResponse:
      properties:
        id:
          description: The globally unique ID for this token
          pattern: ^em-[a-zA-Z0-9-_]+$
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        secret:
          description: The secret for the token. Will not be returned again.
          type: string
      required:
      - id
      - secret
      type: object
    CreateOrganizationInternalRequest:
      properties:
        description:
          description: The organization description
          maxLength: 1000
          type: string
        orbBillingId:
          description: The ORB billing ID for the organization
          maxLength: 1000
          minLength: 1
          type: string
        sub:
          description: The subject ID that will become the admin user of the organization
          minLength: 1
          type: string
        title:
          description: The organization title
          maxLength: 255
          minLength: 1
          type: string
      required:
      - title
      - sub
      - orbBillingId
      type: object
    CreateOrganizationInternalResponse:
      properties:
        capabilities:
          description: The capabilities available to the organization
          items:
            $ref: '#/components/schemas/OrganizationCapability'
          type: array
        description:
          description: The organization description
          type: string
        id:
          description: The created organization ID
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
        slug:
          description: The organization slug
          type: string
        title:
          description: The organization title
          type: string
      required:
      - id
      - title
      type: object
    CreateOrganizationRequest:
      properties:
        description:
          description: The organization description
          maxLength: 1000
          type: string
        email:
          description: The primary email associated with the organization
          maxLength: 255
          minLength: 1
          type: string
        title:
          description: The organization title
          maxLength: 255
          minLength: 1
          type: string
      required:
      - title
      - email
      type: object
    CreateOrganizationResponse:
      properties:
        description:
          description: The organization description
          type: string
        id:
          description: The created organization ID
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
        slug:
          description: The organization slug
          type: string
        title:
          description: The organization title
          type: string
      required:
      - id
      - title
      type: object
    CreatePermissionsSystemRequest:
      properties:
        channel:
          description: The SpiceDB channel to use
          example: rapid
          minLength: 1
          type: string
        datastore:
          $ref: '#/components/schemas/EmbeddedDatastoreSpec'
        datastoreId:
          description: The ID of the datastore instance to use (from ListDatastores).
          example: dbi-qRGmqnr3EUxBZitpC3Moh
          pattern: ^(dbi-[a-zA-Z0-9-]+)?$
          type: string
        deployments:
          description: The deployment configurations for the Permissions System
          items:
            $ref: '#/components/schemas/DeploymentConfig'
          minItems: 1
          nullable: true
          type: array
        name:
          description: The name of the Permissions System
          example: My Permissions System
          maxLength: 100
          minLength: 1
          type: string
        systemType:
          $ref: '#/components/schemas/InternalSystemType'
      required:
      - name
      - systemType
      - deployments
      - channel
      type: object
    CreatePermissionsSystemResponse:
      properties:
        databaseID:
          description: The ID of the created database
          minLength: 1
          type: string
        permissionsSystem:
          $ref: '#/components/schemas/PermissionsSystem'
        secretName:
          description: The name of the created secret
          minLength: 1
          type: string
      required:
      - permissionsSystem
      - databaseID
      - secretName
      type: object
    CreatePermissionsSystemTokenResponse:
      properties:
        tokenContents:
          description: The full token contents. This will only be returned once.
          type: string
      required:
      - tokenContents
      type: object
    CreatePolicyRequest:
      properties:
        description:
          description: The human-supplied description of the Policy. May be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
      required:
      - name
      - principalID
      - roleIDs
      type: object
    CreatePolicyResponse:
      properties:
        createdAt:
          description: The timestamp when the Policy was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Policy. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Policy. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Policy
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        updatedAt:
          description: The timestamp when the Policy was last updated (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Policy. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - principalID
      - roleIDs
      - id
      type: object
    CreateRoleRequest:
      properties:
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      required:
      - name
      - permissions
      type: object
    CreateRoleResponse:
      properties:
        createdAt:
          description: The timestamp when the Role was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Role. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Role
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Role was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Role. May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - permissions
      - id
      type: object
    CreateServiceAccountRequest:
      properties:
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      required:
      - name
      type: object
    CreateServiceAccountResponse:
      properties:
        createdAt:
          description: The timestamp when the Service Account was created (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Service Account. May
            be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        token:
          description: The Tokens associated with this Service Account
          items:
            $ref: '#/components/schemas/Token'
          type: array
        updatedAt:
          description: The timestamp when the Service Account was last updated (RFC
            3339). May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Service Account.
            May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    CreateTokenRequest:
      properties:
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        serviceAccountID:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
      required:
      - name
      type: object
    CreateTokenResponse:
      properties:
        createdAt:
          description: The timestamp when the Token was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Token. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        hash:
          description: The SHA256 hash of the secret part of the token, without the
            prefix
          pattern: ^[a-zA-Z0-9]{64}$
          type: string
        id:
          description: The globally unique ID for this Token
          pattern: ^atk-[a-zA-Z0-9-_]+$
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        secret:
          description: The secret for the token. Will not be returned again.
          type: string
        serviceAccountID:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Token was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Token. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    DatadogExportFeatureConfig:
      properties:
        site:
          description: The Datadog Site associated with your API key.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - site
      type: object
    DatadogMetricExport:
      properties:
        apiKey:
          type: string
        enabled:
          type: boolean
        site:
          type: string
      type: object
    Datastore:
      properties:
        compute:
          $ref: '#/components/schemas/DatastoreCompute'
        id:
          description: The ID for this Datastore instance.
          pattern: ^dbi-[a-zA-Z0-9-]+$
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Datastore. DO NOT USE. Prefer
            ID or the normal name.
          type: string
        name:
          description: The name of the Datastore instance.
          maxLength: 55
          minLength: 1
          type: string
        providerRegion:
          description: The region where the Datastore is hosted. This is separate
            from the Permissions System region.
          type: string
        templateName:
          description: The name of the DatastoreTemplate used during creation.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreType'
      required:
      - id
      - internalReference
      - name
      - type
      type: object
    DatastoreCompute:
      properties:
        virtualCPUs:
          description: The number of virtual CPUs allocated to this Datastore.
          type: integer
      type: object
    DatastoreRegionConfig:
      properties:
        regionID:
          description: The region ID for the datastore node
          type: string
        replicaCount:
          description: The number of replicas for the datastore
          minimum: 0
          type: integer
        storageGiBPerNode:
          description: The storage per node for the datastore in GiB
          type: number
        vCPUPerNode:
          description: The number of vCPUs per replica
          minimum: 0
          type: integer
      required:
      - regionID
      - replicaCount
      - vCPUPerNode
      - storageGiBPerNode
      type: object
    DatastoreTemplate:
      properties:
        allowOverrides:
          description: Configuration fields users are allowed to override
        defaults:
          description: Default configuration values
        description:
          description: Template description
          type: string
        displayName:
          description: Human-readable display name
          type: string
        name:
          description: The name of the template
          type: string
        provider:
          description: Database provider (e.g., cockroachdb)
          type: string
        validations:
          description: CEL validation expressions
          items:
            $ref: '#/components/schemas/DatastoreTemplateValidation'
          type: array
      required:
      - name
      - provider
      - defaults
      type: object
    DatastoreTemplateValidation:
      properties:
        expression:
          description: CEL expression for validation
          type: string
        reason:
          description: Human-readable reason for validation failure
          type: string
      required:
      - expression
      type: object
    DatastoreType:
      enum:
      - spanner
      - postgres
      - cockroachdb
      type: string
    DedicatedSpecification:
      properties:
        numVirtualCpus:
          type: integer
        regionNodes:
          additionalProperties:
            type: integer
          type: object
        storageGib:
          type: integer
      type: object
    Deployment:
      properties:
        cloudProviderDetails:
          $ref: '#/components/schemas/CloudProviderDetails'
        createdAt:
          description: The timestamp when the Deployment was created (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        deploymentTemplateId:
          description: The ID of the DeploymentTemplate used by this Deployment
          type: string
        dnsName:
          description: The DNS name for this Deployment
          type: string
        id:
          description: The globally unique ID for this Deployment
          pattern: ^dp-[a-zA-Z0-9-]+$
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Deployment. DO NOT USE. Prefer
            ID or the normal name.
          type: string
        name:
          description: The name of the Deployment
          type: string
        regionId:
          description: The ID of the Region associated with this Deployment
          type: string
        replicas:
          description: The number of replicas on this Deployment
          type: integer
        systemState:
          $ref: '#/components/schemas/DeploymentState'
      required:
      - id
      - internalReference
      - deploymentTemplateId
      - systemState
      - dnsName
      - regionId
      type: object
    DeploymentConfig:
      properties:
        deploymentTemplateID:
          description: The ID of the deployment template to use
          example: dt-basic-template
          pattern: ^dt-[a-zA-Z0-9-]+$
          type: string
        name:
          description: Optional name for the deployment. If not provided, will be
            auto-generated based on the region.
          example: my-deployment
          maxLength: 64
          minLength: 1
          type: string
        regionID:
          description: The ID of the region where the deployment will be created
          example: rg-us-west-1
          pattern: ^rg-[a-zA-Z0-9-]+$
          type: string
        replicas:
          description: The number of replicas for the deployment
          example: 3
          maximum: 32
          minimum: 1
          type: integer
      required:
      - deploymentTemplateID
      - regionID
      - replicas
      type: object
    DeploymentState:
      properties:
        message:
          description: The message associated with the status
          type: string
        status:
          $ref: '#/components/schemas/DeploymentStatus'
      required:
      - status
      type: object
    DeploymentStatus:
      enum:
      - CONFIGURATION_WARNING
      - MIGRATING
      - MIGRATION_FAILED
      - MODIFYING
      - PROVISIONING
      - RUNNING
      - UNKNOWN
      - VALIDATING
      - VALIDATION_FAILED
      type: string
    DeploymentTemplate:
      properties:
        compute:
          description: The compute allocated for Deployments using this Template,
            described in millicores
          type: integer
        datastoreCockroachDBTxOverlapStrategy:
          $ref: '#/components/schemas/CockroachDBOverlapStrategy'
        datastoreColumnOptimization:
          description: Whether the experimental datastore column optimization is enabled
            in Deployments using this Template
          type: boolean
        datastoreFollowerReadDelay:
          description: amount of time to subtract from computed revision to ensure
            they are sufficiently in the past to enable follower reads. Used for cockroach/spanner
            and postgres read-replicas. Described in seconds
          type: number
        datastoreGCInterval:
          description: The interval at which revision garbage collection runs in the
            datastore for Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreGCWindow:
          description: The window of time before which revisions are garbage collected
            in the datastore for Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreRevisionQuantizationInterval:
          description: The quantization interval for revisions in the datastore for
            Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreRevisionQuantizationMaxStalenessPercent:
          description: The maximum staleness percentage for revision quantization
            in Deployments using this Template, where 0.1 is 10%, 1 = 100%
          type: number
        grpcMaxConnectionAge:
          description: The maximum age of a gRPC connection in Deployments using this
            Template, described in seconds
          minimum: 0
          type: integer
        httpGatewayEnabled:
          description: Whether the HTTP gateway is enabled for Deployments using this
            Template
          type: boolean
        id:
          description: The globally unique ID for this Deployment Template
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Deployment Template. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        limitBulkExportRelationships:
          description: The maximum number of relationships that can be exported in
            a single BulkExport request in Deployments using this Template
          minimum: 0
          type: integer
        limitDatastoreReadPageSize:
          description: The maximum page size that will be loaded into memory from
            the datastore at a time in Deployments using this Template
          minimum: 0
          type: integer
        limitDeleteRelationships:
          description: The maximum number of relationships that can be deleted in
            a single request in Deployments using this Template
          minimum: 0
          type: integer
        limitDispatchChunkSize:
          description: The maximum number of object IDs in a dispatched request in
            Deployments using this Template
          minimum: 0
          type: integer
        limitDispatchDepth:
          description: The maximum recursion depth for nested calls in Deployments
            using this Template. This is used to prevent infinite recursion in dispatches.
          minimum: 0
          type: integer
        limitLookupResourcesPageSize:
          description: The maximum page size that can be used for LookupResources
            requests in Deployments using this Template
          minimum: 0
          type: integer
        limitReadRelationshipsPageSize:
          description: The maximum page size that can be used for ReadRelationships
            requests in Deployments using this Template
          minimum: 0
          type: integer
        limitRelationshipsPreconditions:
          description: The maximum number of preconditions that can be included in
            a single WriteRelationships or DeleteRelationships request in Deployments
            using this Template
          minimum: 0
          type: integer
        limitRequestCaveatContextSize:
          description: The maximum allowed size of request caveat context in bytes
            for Deployments using this Template. A value of zero or less means no
            limit
          minimum: 0
          type: integer
        limitStoredCaveatContextSize:
          description: The maximum allowed size of stored caveat context per relationship
            in bytes for Deployments using this Template
          minimum: 0
          type: integer
        limitWriteRelationshipsUpdates:
          description: The maximum number of updates that can be made in a single
            WriteRelationships request in Deployments using this Template
          minimum: 0
          type: integer
        memory:
          description: The memory allocated for Deployments using this Template, described
            in MiB
          type: integer
        name:
          description: The name of the Deployment Template
          type: string
        relationshipExpirationEnabled:
          description: Whether experimental support for first-class relationship expiration
            is enabled in Deployments using this Template
          type: boolean
        requireSchemaPrefixes:
          description: Whether schema prefixes are required in Deployments using this
            Template
          type: boolean
        systemType:
          $ref: '#/components/schemas/SystemType'
        watchableSchemaCacheEnabled:
          description: Whether the experimental schema cache which makes use of the
            Watch API to keep the cache updated is enabled in Deployments using this
            Template
          type: boolean
        watchableSchemaHeartbeatInterval:
          description: The heartbeat interval for the experimental schema cache in
            Deployments using this Template, described in seconds
          minimum: 0
          type: integer
      required:
      - id
      type: object
    DownloadFGAMConfigResponse:
      properties:
        configYAML:
          description: The FGAM configuration as a YAML string
          type: string
      required:
      - configYAML
      type: object
    Duration:
      type: object
    EmbeddedDatastoreSpec:
      properties:
        class:
          description: The datastore class to use for the instance
          example: cockroachdb-basic
          type: string
        cockroachdb:
          $ref: '#/components/schemas/ClusterSpec'
      type: object
    EstimatedLineItem:
      properties:
        estimatedCost:
          $ref: '#/components/schemas/EstimatedPricesByTime'
        quantity:
          description: The quantity for the line item
          example: 4
          type: number
        quantityUnit:
          description: The unit of measurement for the quantity
          example: vCPU
          type: string
        regionName:
          description: The region name for the line item
          example: us-central1
          type: string
        title:
          description: The title of the line item
          example: SpiceDB Compute
          type: string
      required:
      - title
      - regionName
      - estimatedCost
      - quantity
      - quantityUnit
      type: object
    EstimatedPrice:
      properties:
        currencyISOCode:
          description: The ISO code of the currency
          example: USD
          type: string
        formattedCost:
          description: The formatted cost with currency symbol
          example: $2.50
          type: string
        numericCost:
          description: The numeric cost value
          example: 2.5
          type: number
      required:
      - formattedCost
      - numericCost
      - currencyISOCode
      type: object
    EstimatedPricesByTime:
      properties:
        hourly:
          $ref: '#/components/schemas/EstimatedPrice'
        monthly:
          $ref: '#/components/schemas/EstimatedPrice'
      required:
      - hourly
      - monthly
      type: object
    Feature:
      properties:
        displayName:
          description: The display name for the Feature
          type: string
        enabled:
          description: Whether a specific feature is enabled or disabled
          type: boolean
        id:
          $ref: '#/components/schemas/PermissionsSystemFeature'
      type: object
    GetDatastoreResponse:
      properties:
        datastore:
          $ref: '#/components/schemas/Datastore'
      type: object
    GetDeploymentTemplateResponse:
      properties:
        compute:
          description: The compute allocated for Deployments using this Template,
            described in millicores
          type: integer
        datastoreCockroachDBTxOverlapStrategy:
          $ref: '#/components/schemas/CockroachDBOverlapStrategy'
        datastoreColumnOptimization:
          description: Whether the experimental datastore column optimization is enabled
            in Deployments using this Template
          type: boolean
        datastoreFollowerReadDelay:
          description: amount of time to subtract from computed revision to ensure
            they are sufficiently in the past to enable follower reads. Used for cockroach/spanner
            and postgres read-replicas. Described in seconds
          type: number
        datastoreGCInterval:
          description: The interval at which revision garbage collection runs in the
            datastore for Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreGCWindow:
          description: The window of time before which revisions are garbage collected
            in the datastore for Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreRevisionQuantizationInterval:
          description: The quantization interval for revisions in the datastore for
            Deployments using this Template, in seconds
          minimum: 0
          type: integer
        datastoreRevisionQuantizationMaxStalenessPercent:
          description: The maximum staleness percentage for revision quantization
            in Deployments using this Template, where 0.1 is 10%, 1 = 100%
          type: number
        grpcMaxConnectionAge:
          description: The maximum age of a gRPC connection in Deployments using this
            Template, described in seconds
          minimum: 0
          type: integer
        httpGatewayEnabled:
          description: Whether the HTTP gateway is enabled for Deployments using this
            Template
          type: boolean
        id:
          description: The globally unique ID for this Deployment Template
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Deployment Template. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        limitBulkExportRelationships:
          description: The maximum number of relationships that can be exported in
            a single BulkExport request in Deployments using this Template
          minimum: 0
          type: integer
        limitDatastoreReadPageSize:
          description: The maximum page size that will be loaded into memory from
            the datastore at a time in Deployments using this Template
          minimum: 0
          type: integer
        limitDeleteRelationships:
          description: The maximum number of relationships that can be deleted in
            a single request in Deployments using this Template
          minimum: 0
          type: integer
        limitDispatchChunkSize:
          description: The maximum number of object IDs in a dispatched request in
            Deployments using this Template
          minimum: 0
          type: integer
        limitDispatchDepth:
          description: The maximum recursion depth for nested calls in Deployments
            using this Template. This is used to prevent infinite recursion in dispatches.
          minimum: 0
          type: integer
        limitLookupResourcesPageSize:
          description: The maximum page size that can be used for LookupResources
            requests in Deployments using this Template
          minimum: 0
          type: integer
        limitReadRelationshipsPageSize:
          description: The maximum page size that can be used for ReadRelationships
            requests in Deployments using this Template
          minimum: 0
          type: integer
        limitRelationshipsPreconditions:
          description: The maximum number of preconditions that can be included in
            a single WriteRelationships or DeleteRelationships request in Deployments
            using this Template
          minimum: 0
          type: integer
        limitRequestCaveatContextSize:
          description: The maximum allowed size of request caveat context in bytes
            for Deployments using this Template. A value of zero or less means no
            limit
          minimum: 0
          type: integer
        limitStoredCaveatContextSize:
          description: The maximum allowed size of stored caveat context per relationship
            in bytes for Deployments using this Template
          minimum: 0
          type: integer
        limitWriteRelationshipsUpdates:
          description: The maximum number of updates that can be made in a single
            WriteRelationships request in Deployments using this Template
          minimum: 0
          type: integer
        memory:
          description: The memory allocated for Deployments using this Template, described
            in MiB
          type: integer
        name:
          description: The name of the Deployment Template
          type: string
        relationshipExpirationEnabled:
          description: Whether experimental support for first-class relationship expiration
            is enabled in Deployments using this Template
          type: boolean
        requireSchemaPrefixes:
          description: Whether schema prefixes are required in Deployments using this
            Template
          type: boolean
        systemType:
          $ref: '#/components/schemas/SystemType'
        watchableSchemaCacheEnabled:
          description: Whether the experimental schema cache which makes use of the
            Watch API to keep the cache updated is enabled in Deployments using this
            Template
          type: boolean
        watchableSchemaHeartbeatInterval:
          description: The heartbeat interval for the experimental schema cache in
            Deployments using this Template, described in seconds
          minimum: 0
          type: integer
      required:
      - id
      type: object
    GetFeatureAuditLogResponse:
      properties:
        config:
          $ref: '#/components/schemas/AuditLogFeatureConfig'
        displayName:
          description: The display name for the Feature
          type: string
        enabled:
          description: Whether a specific feature is enabled or disabled
          type: boolean
        id:
          $ref: '#/components/schemas/PermissionsSystemFeature'
      type: object
    GetFeatureDatadogExportResponse:
      properties:
        config:
          $ref: '#/components/schemas/DatadogExportFeatureConfig'
        displayName:
          description: The display name for the Feature
          type: string
        enabled:
          description: Whether a specific feature is enabled or disabled
          type: boolean
        id:
          $ref: '#/components/schemas/PermissionsSystemFeature'
      type: object
    GetPermissionsSystemResponse:
      properties:
        availableVersions:
          description: The available versions of SpiceDB that can be used in this
            Permissions System. This is only populated if the Permissions System is
            on an update channel.
          items:
            $ref: '#/components/schemas/SpiceDBVersion'
          type: array
        capabilities:
          description: The capabilities on the Permissions System.
          items:
            $ref: '#/components/schemas/Capability'
          type: array
        datastore:
          $ref: '#/components/schemas/PermissionsSystemDatastore'
        features:
          description: The features enabled in this Permissions System
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        id:
          description: The globally unique ID for this Permissions System
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Permissions System. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        name:
          description: The name of the Permissions System
          type: string
        systemState:
          $ref: '#/components/schemas/PermissionsSystemState'
        systemType:
          $ref: '#/components/schemas/SystemType'
        version:
          $ref: '#/components/schemas/SystemVersion'
      required:
      - id
      - systemType
      type: object
    GetPlatformResponse:
      properties:
        capabilities:
          description: List of platform capabilities
          items:
            $ref: '#/components/schemas/PlatformCapability'
          type: array
        cloudApiDocumentationEndpoint:
          description: The endpoint for the Cloud API documentation
          type: string
      required:
      - capabilities
      - cloudApiDocumentationEndpoint
      type: object
    GetPolicyResponse:
      properties:
        createdAt:
          description: The timestamp when the Policy was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Policy. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Policy. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Policy
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        updatedAt:
          description: The timestamp when the Policy was last updated (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Policy. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - principalID
      - roleIDs
      - id
      type: object
    GetRoleResponse:
      properties:
        createdAt:
          description: The timestamp when the Role was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Role. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Role
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Role was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Role. May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - permissions
      - id
      type: object
    GetServiceAccountResponse:
      properties:
        createdAt:
          description: The timestamp when the Service Account was created (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Service Account. May
            be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        token:
          description: The Tokens associated with this Service Account
          items:
            $ref: '#/components/schemas/Token'
          type: array
        updatedAt:
          description: The timestamp when the Service Account was last updated (RFC
            3339). May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Service Account.
            May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    GetTokenResponse:
      properties:
        createdAt:
          description: The timestamp when the Token was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Token. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        hash:
          description: The SHA256 hash of the secret part of the token, without the
            prefix
          pattern: ^[a-zA-Z0-9]{64}$
          type: string
        id:
          description: The globally unique ID for this Token
          pattern: ^atk-[a-zA-Z0-9-_]+$
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        serviceAccountID:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Token was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Token. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    InternalSystemType:
      enum:
      - development
      - production
      type: string
    InvitationRoleName:
      enum:
      - org_admin
      - ps_admin
      - ps_viewer
      type: string
    ListChannelsAndVersionsResponse:
      properties:
        channels:
          description: Available channels for SpiceDB versions
          items:
            $ref: '#/components/schemas/SpiceDBChannel'
          nullable: true
          type: array
      required:
      - channels
      type: object
    ListDatastoreTemplatesResponse:
      properties:
        templates:
          description: Available datastore templates
          items:
            $ref: '#/components/schemas/DatastoreTemplate'
          nullable: true
          type: array
      type: object
    ListDatastoresResponse:
      items:
        $ref: '#/components/schemas/Datastore'
      nullable: true
      type: array
    ListDeploymentTemplatesResponse:
      properties:
        deploymentTemplates:
          description: The list of DeploymentTemplate
          items:
            $ref: '#/components/schemas/DeploymentTemplate'
          type: array
      required:
      - deploymentTemplates
      type: object
    ListDeploymentsResponse:
      items:
        $ref: '#/components/schemas/Deployment'
      nullable: true
      type: array
    ListExternalMetricsTokenResponse:
      properties:
        tokens:
          description: The list of tokens for the Permissions System. If no tokens
            exist, this will be empty.
          items:
            $ref: '#/components/schemas/ListExternalMetricsTokenResponseElement'
          type: array
      required:
      - tokens
      type: object
    ListExternalMetricsTokenResponseElement:
      properties:
        hash:
          description: If the token exists, the SHA256 hash of the secret part of
            the token, without the prefix
          pattern: ^[a-zA-Z0-9]{64}$
          type: string
        id:
          description: The globally unique ID for this token
          pattern: ^em-[a-zA-Z0-9-_]+$
          type: string
      required:
      - id
      - hash
      type: object
    ListMaterializeClustersResponse:
      properties:
        clusters:
          description: A list of Materialize clusters
          items:
            $ref: '#/components/schemas/MaterializeCluster'
          type: array
      required:
      - clusters
      type: object
    ListOrganizationRolesResponse:
      properties:
        canGrantRoles:
          description: Whether the current user can grant roles on this organization
          type: boolean
        roles:
          description: List of roles for the Organization. Each role includes its
            kind and the subject ID it applies to.
          items:
            $ref: '#/components/schemas/OrganizationRole'
          type: array
      required:
      - roles
      - canGrantRoles
      type: object
    ListOrganizationsResponse:
      properties:
        organizations:
          description: List of organizations
          items:
            $ref: '#/components/schemas/Organization'
          type: array
      required:
      - organizations
      type: object
    ListPermissionsSystemRolesResponse:
      properties:
        canGrantRoles:
          description: Whether the current user can grant roles on this permissions
            system
          type: boolean
        roles:
          description: List of roles for the Permissions System. Each role includes
            its kind and the subject ID it applies to.
          items:
            $ref: '#/components/schemas/AuthzedRole'
          type: array
      required:
      - roles
      - canGrantRoles
      type: object
    ListPermissionsSystemTokensResponse:
      items:
        $ref: '#/components/schemas/PermissionsSystemToken'
      nullable: true
      type: array
    ListPermissionsSystemsResponse:
      items:
        $ref: '#/components/schemas/PermissionsSystem'
      nullable: true
      type: array
    ListPoliciesResponse:
      items:
        $ref: '#/components/schemas/Policy'
      nullable: true
      type: array
    ListRegionsResponse:
      items:
        $ref: '#/components/schemas/Region'
      nullable: true
      type: array
    ListRolesResponse:
      items:
        $ref: '#/components/schemas/Role'
      nullable: true
      type: array
    ListServiceAccountsResponse:
      items:
        $ref: '#/components/schemas/ServiceAccount'
      nullable: true
      type: array
    ListTokensResponse:
      items:
        $ref: '#/components/schemas/Token'
      nullable: true
      type: array
    MaterializeCluster:
      properties:
        deploymentID:
          description: The ID of the Permission System Deployment
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: The ID for this Materialize cluster
          pattern: ^mc-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Materialize deployment
          maxLength: 50
          minLength: 1
          type: string
        permissionsSystemID:
          description: The ID for the SpiceDB deployment that will provide incremental
            updates to the materialized view
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        status:
          $ref: '#/components/schemas/MaterializeClusterStatus'
        watchedPermissions:
          description: The permissions that this Materialize cluster is watching for
            changes
          items:
            type: string
          type: array
      required:
      - id
      - permissionsSystemID
      - name
      - deploymentID
      - status
      - watchedPermissions
      type: object
    MaterializeClusterJobStatus:
      properties:
        completionTime:
          format: date-time
          type: string
        startTime:
          format: date-time
          type: string
        tag:
          type: string
      required:
      - tag
      - startTime
      type: object
    MaterializeClusterStatus:
      properties:
        conditions:
          description: The conditions of the Materialize cluster
          items:
            $ref: '#/components/schemas/MaterializeClusterStatusCondition'
          type: array
        databaseName:
          type: string
        latestGroupStore:
          $ref: '#/components/schemas/MaterializeClusterJobStatus'
        latestSnapshot:
          $ref: '#/components/schemas/MaterializeClusterJobStatus'
        region:
          type: string
      required:
      - conditions
      - latestSnapshot
      - latestGroupStore
      - region
      - databaseName
      type: object
    MaterializeClusterStatusCondition:
      properties:
        lastTransitionTime:
          format: date-time
          type: string
        message:
          description: A human-readable message indicating the status of the Materialize
            cluster
          type: string
        observedGeneration:
          type: integer
        reason:
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - message
      - type
      - status
      - observedGeneration
      - lastTransitionTime
      - reason
      type: object
    MetricExportConfiguration:
      properties:
        cloudWatch:
          $ref: '#/components/schemas/CloudWatchMetricExport'
        datadog:
          $ref: '#/components/schemas/DatadogMetricExport'
        prometheus:
          $ref: '#/components/schemas/PrometheusMetricExport'
      type: object
    OrgRoleKind:
      enum:
      - admin
      - member
      type: string
    Organization:
      properties:
        capabilities:
          description: The capabilities available to the organization
          items:
            $ref: '#/components/schemas/OrganizationCapability'
          type: array
        description:
          description: The organization description
          example: An example organization
          type: string
        hasPaymentInfo:
          description: Whether payment information has been provided for this organization
          type: boolean
        id:
          description: The organization ID
          example: org-example
          pattern: ^org-[a-zA-Z0-9-]+$
          type: string
        paymentPortalUrl:
          description: The URL for the user payment portal
          type: string
        title:
          description: The organization title
          example: Example Organization
          type: string
      required:
      - id
      - title
      - hasPaymentInfo
      type: object
    OrganizationCapability:
      enum:
      - role_management
      - create_ps
      - delete
      - manage_payments
      - create_datastore
      type: string
    OrganizationRole:
      properties:
        kind:
          $ref: '#/components/schemas/OrgRoleKind'
        metadata:
          $ref: '#/components/schemas/SubjectMetadata'
        subjectId:
          description: The ID of the subject this role applies to, e.g., 'user-12345'
          type: string
      required:
      - kind
      - subjectId
      type: object
    PerfInsightsTopKRangeResponse:
      properties:
        prometheusJSON:
          description: The Prometheus query result in JSON format for the top K API
            shapes over the specified time range.
          type: string
      type: object
    PerfInsightsTopKResponse:
      properties:
        shapes:
          description: The top K most expensive API calls
          items:
            $ref: '#/components/schemas/APIShapeMetrics'
          nullable: true
          type: array
      type: object
    Period:
      enum:
      - 1m
      - 5m
      - 10m
      - 30m
      - 1h
      - 6h
      - 12h
      - 24h
      type: string
    PermissionExprMap:
      properties:
        authzed.v1/BulkCheckPermission:
          type: string
        authzed.v1/BulkExportRelationships:
          type: string
        authzed.v1/BulkImportRelationships:
          type: string
        authzed.v1/CheckBulkPermissions:
          type: string
        authzed.v1/CheckPermission:
          type: string
        authzed.v1/ComputablePermissions:
          type: string
        authzed.v1/DeleteRelationships:
          type: string
        authzed.v1/DependentRelations:
          type: string
        authzed.v1/DiffSchema:
          type: string
        authzed.v1/ExpandPermissionTree:
          type: string
        authzed.v1/ExperimentalComputablePermissions:
          type: string
        authzed.v1/ExperimentalCountRelationships:
          type: string
        authzed.v1/ExperimentalDependentRelations:
          type: string
        authzed.v1/ExperimentalDiffSchema:
          type: string
        authzed.v1/ExperimentalReflectSchema:
          type: string
        authzed.v1/ExperimentalRegisterRelationshipCounter:
          type: string
        authzed.v1/ExperimentalUnregisterRelationshipCounter:
          type: string
        authzed.v1/ExportBulkRelationships:
          type: string
        authzed.v1/ImportBulkRelationships:
          type: string
        authzed.v1/LookupResources:
          type: string
        authzed.v1/LookupSubjects:
          type: string
        authzed.v1/ReadRelationships:
          type: string
        authzed.v1/ReadSchema:
          type: string
        authzed.v1/ReflectSchema:
          type: string
        authzed.v1/Watch:
          type: string
        authzed.v1/WriteRelationships:
          type: string
        authzed.v1/WriteSchema:
          type: string
    PermissionsSystem:
      properties:
        availableVersions:
          description: The available versions of SpiceDB that can be used in this
            Permissions System. This is only populated if the Permissions System is
            on an update channel.
          items:
            $ref: '#/components/schemas/SpiceDBVersion'
          type: array
        capabilities:
          description: The capabilities on the Permissions System.
          items:
            $ref: '#/components/schemas/Capability'
          type: array
        datastore:
          $ref: '#/components/schemas/PermissionsSystemDatastore'
        features:
          description: The features enabled in this Permissions System
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        id:
          description: The globally unique ID for this Permissions System
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Permissions System. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        name:
          description: The name of the Permissions System
          type: string
        systemState:
          $ref: '#/components/schemas/PermissionsSystemState'
        systemType:
          $ref: '#/components/schemas/SystemType'
        version:
          $ref: '#/components/schemas/SystemVersion'
      required:
      - id
      - systemType
      type: object
    PermissionsSystemDatastore:
      properties:
        id:
          description: The ID for the Datastore used by this Permissions System.
          pattern: ^dbi-[a-zA-Z0-9-]+$
          type: string
        identifier:
          description: The identifier for the Datastore used by this Permissions System.
          type: string
        region:
          description: The region of the Datastore used by this Permissions System.
          type: string
        type:
          $ref: '#/components/schemas/DatastoreType'
      required:
      - id
      - type
      type: object
    PermissionsSystemEstimatedCostRequest:
      properties:
        datastoreRegionConfig:
          description: The datastore region configuration for the Permissions System
          items:
            $ref: '#/components/schemas/DatastoreRegionConfig'
          nullable: true
          type: array
        deployments:
          description: The deployment configurations for the Permissions System
          items:
            $ref: '#/components/schemas/DeploymentConfig'
          minItems: 1
          nullable: true
          type: array
        systemType:
          $ref: '#/components/schemas/InternalSystemType'
      required:
      - systemType
      - deployments
      - datastoreRegionConfig
      type: object
    PermissionsSystemEstimatedCostResponse:
      properties:
        estimatedTotalCost:
          $ref: '#/components/schemas/EstimatedPricesByTime'
        lineItems:
          description: List of estimated cost line items
          items:
            $ref: '#/components/schemas/EstimatedLineItem'
          nullable: true
          type: array
      required:
      - lineItems
      - estimatedTotalCost
      type: object
    PermissionsSystemFeature:
      enum:
      - WorkloadIsolation
      - RestrictedAPIAccess
      - DatadogExport
      - AuditLog
      - PerfInsights
      - ScheduledRestore
      type: string
    PermissionsSystemState:
      properties:
        message:
          description: The message associated with the status
          type: string
        status:
          $ref: '#/components/schemas/PermissionsSystemStatus'
      type: object
    PermissionsSystemStatus:
      enum:
      - CLUSTER_ISSUE
      - DEGRADED
      - MODIFYING
      - PAUSED
      - PROVISIONING
      - DATASTORE_PROVISIONING
      - PROVISION_ERROR
      - INITIAL_MIGRATION
      - RUNNING
      - UNKNOWN
      - UPGRADE_ERROR
      - UPGRADING
      type: string
    PermissionsSystemToken:
      properties:
        name:
          description: The display name/prefix of the token
          type: string
        prefix:
          description: The prefix of the token
          type: string
      required:
      - name
      - prefix
      type: object
    PlatformCapability:
      enum:
      - UserOrgCreation
      - DatadogExport
      type: string
    Policy:
      properties:
        createdAt:
          description: The timestamp when the Policy was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Policy. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Policy. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Policy
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        updatedAt:
          description: The timestamp when the Policy was last updated (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Policy. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - principalID
      - roleIDs
      - id
      type: object
    PrometheusMetricExport:
      properties:
        enabled:
          type: boolean
      type: object
    Region:
      properties:
        cloudAccountId:
          description: The cloud account ID associated with this region
          type: string
        cloudKind:
          $ref: '#/components/schemas/CloudKind'
        dnsSuffix:
          description: The DNS suffix for clusters in this region
          type: string
        id:
          description: The region identifier
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Permissions System. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        name:
          description: The display name of the region
          type: string
      required:
      - id
      - internalReference
      - cloudKind
      - cloudAccountId
      - dnsSuffix
      type: object
    Role:
      properties:
        createdAt:
          description: The timestamp when the Role was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Role. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Role
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Role was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Role. May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - permissions
      - id
      type: object
    RoleKind:
      enum:
      - admin
      - viewer
      type: string
    RotateExternalMetricsTokenResponse:
      properties:
        secret:
          description: The secret for the token. Will not be returned again.
          type: string
      required:
      - secret
      type: object
    SendRoleInvitationRequest:
      properties:
        inviteeEmail:
          description: The email address of the invitee
          example: invitee@example.com
          maxLength: 255
          minLength: 1
          type: string
        message:
          description: Custom message to include in the invitation email
          example: Welcome!
          maxLength: 1000
          type: string
        roleName:
          $ref: '#/components/schemas/InvitationRoleName'
        targetResourceId:
          description: The ID of the target resource (org-* for organizations, ps-*
            for permissions systems)
          example: org-example
          type: string
      required:
      - targetResourceId
      - roleName
      - inviteeEmail
      type: object
    ServerlessSpecification:
      properties:
        primaryRegion:
          type: string
        regions:
          items:
            type: string
          type: array
        upgradeType:
          type: string
        usageLimits:
          $ref: '#/components/schemas/UsageLimits'
      type: object
    ServiceAccount:
      properties:
        createdAt:
          description: The timestamp when the Service Account was created (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Service Account. May
            be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        token:
          description: The Tokens associated with this Service Account
          items:
            $ref: '#/components/schemas/Token'
          type: array
        updatedAt:
          description: The timestamp when the Service Account was last updated (RFC
            3339). May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Service Account.
            May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    SetFeatureAuditLogRequest:
      properties:
        config:
          $ref: '#/components/schemas/AuditLogFeatureConfig'
        enabled:
          type: boolean
      required:
      - enabled
      type: object
    SetFeatureAuditLogResponse:
      properties:
        config:
          $ref: '#/components/schemas/AuditLogFeatureConfig'
        displayName:
          description: The display name for the Feature
          type: string
        enabled:
          description: Whether a specific feature is enabled or disabled
          type: boolean
        id:
          $ref: '#/components/schemas/PermissionsSystemFeature'
      type: object
    SetFeatureDatadogExportRequest:
      properties:
        apiKey:
          description: The Datadog API key. Will not be returned after writing.
          minLength: 1
          type: string
        site:
          description: The Datadog Site associated with your API key.
          maxLength: 64
          minLength: 1
          type: string
      required:
      - site
      - apiKey
      type: object
    SetFeatureDatadogExportResponse:
      properties:
        config:
          $ref: '#/components/schemas/DatadogExportFeatureConfig'
        displayName:
          description: The display name for the Feature
          type: string
        enabled:
          description: Whether a specific feature is enabled or disabled
          type: boolean
        id:
          $ref: '#/components/schemas/PermissionsSystemFeature'
      type: object
    SetOrgRoleKind:
      enum:
      - admin
      type: string
    SetOrganizationRoleRequest:
      properties:
        kind:
          $ref: '#/components/schemas/SetOrgRoleKind'
        subjectId:
          description: The ID of the subject to assign the role to
          example: user-12345
          pattern: ^user-[\$a-zA-Z0-9-]+$
          type: string
      required:
      - kind
      - subjectId
      type: object
    SetPermissionsSystemRoleRequest:
      properties:
        kind:
          $ref: '#/components/schemas/RoleKind'
        subjectId:
          description: The ID of the subject to assign the role to
          example: user-12345
          type: string
      required:
      - kind
      - subjectId
      type: object
    ShapeField:
      enum:
      - api_kind
      - resource_type
      - resource_relation
      - subject_type
      - subject_relation
      - name
      - filter
      type: string
    SortBy:
      enum:
      - impact
      - count
      - p50
      - p95
      - p99
      type: string
    SpiceDBChannel:
      properties:
        description:
          description: The description of the channel
          maxLength: 200
          type: string
        displayName:
          description: The display name of the channel
          maxLength: 100
          minLength: 1
          type: string
        name:
          description: The unique name of the channel, e.g. 'stable', 'beta', or 'alpha'
          maxLength: 100
          minLength: 1
          type: string
        versions:
          description: The versions available in this channel, sorted from newest
            to oldest
          items:
            $ref: '#/components/schemas/SpiceDBVersion'
          type: array
      required:
      - name
      - displayName
      type: object
    SpiceDBVersion:
      properties:
        displayName:
          description: The display name of the version
          maxLength: 100
          minLength: 1
          type: string
        supportedAPIs:
          description: The SpiceDB APIs supported by this version
          items:
            type: string
          type: array
        supportedFeatureNames:
          description: The features supported by the version
          items:
            $ref: '#/components/schemas/PermissionsSystemFeature'
          type: array
        version:
          description: The version of SpiceDB
          maxLength: 100
          minLength: 1
          type: string
      required:
      - displayName
      - version
      type: object
    SubjectKind:
      enum:
      - user
      type: string
    SubjectMetadata:
      properties:
        email:
          description: The subject's email address; may be redacted for privacy
          example: j*****e@example.com
          nullable: true
          type: string
        name:
          description: The subject's display name
          example: John Doe
          nullable: true
          type: string
        pictureUrl:
          description: The subject's profile picture URL
          example: https://example.com/avatar.jpg
          nullable: true
          type: string
        subjectKind:
          $ref: '#/components/schemas/SubjectKind'
      type: object
    SystemType:
      enum:
      - development
      - production
      type: string
    SystemVersion:
      properties:
        currentVersion:
          $ref: '#/components/schemas/SpiceDBVersion'
        hasUpdateAvailable:
          description: Whether an update is available for the SpiceDB version
          type: boolean
        isLockedToVersion:
          description: Whether the version is locked to a specific version or not
          type: boolean
        overrideImage:
          description: The image to use for the SpiceDB instance. If not specified,
            the default image for the channel will be used.
          type: string
        selectedChannel:
          description: The channel selected for the SpiceDB version. May be empty.
          type: string
        selectedChannelDisplayName:
          description: The display name of the selected channel
          type: string
      type: object
    Token:
      properties:
        createdAt:
          description: The timestamp when the Token was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Token. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        hash:
          description: The SHA256 hash of the secret part of the token, without the
            prefix
          pattern: ^[a-zA-Z0-9]{64}$
          type: string
        id:
          description: The globally unique ID for this Token
          pattern: ^atk-[a-zA-Z0-9-_]+$
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        serviceAccountID:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Token was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Token. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    UpdateDatastoreRequest:
      properties:
        cockroachdb:
          $ref: '#/components/schemas/ClusterSpec'
        name:
          description: The new name of the datastore instance
          maxLength: 55
          minLength: 1
          type: string
      type: object
    UpdateDatastoreResponse:
      properties:
        datastore:
          $ref: '#/components/schemas/Datastore'
      type: object
    UpdateDeploymentIPAllowFilterPolicy:
      properties:
        cidr:
          description: CIDR of the IP allow filter policy for the Deployment
          type: string
        source:
          $ref: '#/components/schemas/UpdateDeploymentIPAllowFilterPolicySource'
      type: object
    UpdateDeploymentIPAllowFilterPolicySource:
      enum:
      - Peer
      - Remote
      type: string
    UpdateDeploymentRequest:
      properties:
        deploymentTemplateID:
          description: Optional, the new ID of the Deployment Template to use for
            this Deployment
          type: string
        ipAllowFilterPolicy:
          description: Optional, the new IP allow filter policy for the Deployment
          items:
            $ref: '#/components/schemas/UpdateDeploymentIPAllowFilterPolicy'
          nullable: true
          type: array
        name:
          description: Optional, the new name of the Deployment
          minLength: 1
          type: string
        replicas:
          description: Optional, the new number of replicas on this Deployment
          maximum: 32
          minimum: 1
          nullable: true
          type: integer
      type: object
    UpdateMyMetadataRequest:
      properties:
        email:
          description: The user's email address
          example: john.doe@example.com
          nullable: true
          type: string
        name:
          description: The user's display name
          example: John Doe
          nullable: true
          type: string
        picture:
          description: The user's profile picture URL
          example: https://example.com/avatar.jpg
          nullable: true
          type: string
      type: object
    UpdatePermissionsSystemRequest:
      properties:
        channel:
          description: The channel selected for the SpiceDB version. May be empty.
          type: string
        name:
          description: The name of the Permissions System
          type: string
        selectedVersion:
          description: The specific version to pin to. If not specified, the system
            will use automatic updates.
          nullable: true
          type: string
        systemType:
          $ref: '#/components/schemas/SystemType'
      type: object
    UpdatePermissionsSystemResponse:
      properties:
        availableVersions:
          description: The available versions of SpiceDB that can be used in this
            Permissions System. This is only populated if the Permissions System is
            on an update channel.
          items:
            $ref: '#/components/schemas/SpiceDBVersion'
          type: array
        capabilities:
          description: The capabilities on the Permissions System.
          items:
            $ref: '#/components/schemas/Capability'
          type: array
        datastore:
          $ref: '#/components/schemas/PermissionsSystemDatastore'
        features:
          description: The features enabled in this Permissions System
          items:
            $ref: '#/components/schemas/Feature'
          type: array
        id:
          description: The globally unique ID for this Permissions System
          type: string
        internalReference:
          deprecated: true
          description: The internal reference of the Permissions System. DO NOT USE.
            Prefer ID or the normal name.
          type: string
        name:
          description: The name of the Permissions System
          type: string
        systemState:
          $ref: '#/components/schemas/PermissionsSystemState'
        systemType:
          $ref: '#/components/schemas/SystemType'
        version:
          $ref: '#/components/schemas/SystemVersion'
      required:
      - id
      - systemType
      type: object
    UpdatePolicyRequest:
      properties:
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
      required:
      - name
      type: object
    UpdatePolicyResponse:
      properties:
        createdAt:
          description: The timestamp when the Policy was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Policy. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Policy. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Policy
          pattern: ^apc-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Policy
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        principalID:
          description: The ID of the Principal that this Policy is associated with
          type: string
        roleIDs:
          description: The IDs of the Roles that this Policy is associated with. Currently
            only allowed to be a single ID
          items:
            type: string
          maxItems: 1
          minItems: 1
          type: array
        updatedAt:
          description: The timestamp when the Policy was last updated (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Policy. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - principalID
      - roleIDs
      - id
      type: object
    UpdateRoleRequest:
      properties:
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
      required:
      - name
      type: object
    UpdateRoleResponse:
      properties:
        createdAt:
          description: The timestamp when the Role was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Role. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Role. May be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Role
          pattern: ^arl-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Role
          maxLength: 100
          minLength: 1
          type: string
        permissions:
          $ref: '#/components/schemas/PermissionExprMap'
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Role was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Role. May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - permissions
      - id
      type: object
    UpdateServiceAccountRequest:
      properties:
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
      required:
      - name
      type: object
    UpdateServiceAccountResponse:
      properties:
        createdAt:
          description: The timestamp when the Service Account was created (RFC 3339).
            May not be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Service Account. May
            be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Service Account. May
            be empty.
          maxLength: 200
          type: string
        id:
          description: The globally unique ID for this Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        name:
          description: The name of the Service Account
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        token:
          description: The Tokens associated with this Service Account
          items:
            $ref: '#/components/schemas/Token'
          type: array
        updatedAt:
          description: The timestamp when the Service Account was last updated (RFC
            3339). May not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Service Account.
            May be empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    UpdateTokenRequest:
      properties:
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
      required:
      - name
      type: object
    UpdateTokenResponse:
      properties:
        createdAt:
          description: The timestamp when the Token was created (RFC 3339). May not
            be specified.
          format: date-time
          nullable: true
          type: string
        creator:
          description: The ID of the subject that created this Token. May be empty.
          type: string
        creatorMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
        description:
          description: The human-supplied description of the Token. May be empty.
          maxLength: 200
          type: string
        hash:
          description: The SHA256 hash of the secret part of the token, without the
            prefix
          pattern: ^[a-zA-Z0-9]{64}$
          type: string
        id:
          description: The globally unique ID for this Token
          pattern: ^atk-[a-zA-Z0-9-_]+$
          type: string
        name:
          description: The name of the Token
          maxLength: 100
          minLength: 1
          type: string
        permissionsSystemID:
          description: The globally unique ID for the Permissions System
          pattern: ^ps-[a-zA-Z0-9-]+$
          type: string
        serviceAccountID:
          description: The globally unique ID for the containing Service Account
          pattern: ^asa-[a-zA-Z0-9-]+$
          type: string
        updatedAt:
          description: The timestamp when the Token was last updated (RFC 3339). May
            not be specified.
          format: date-time
          nullable: true
          type: string
        updater:
          description: The ID of the subject that last updated this Token. May be
            empty.
          type: string
        updaterMetadata:
          $ref: '#/components/schemas/SubjectMetadata'
      required:
      - name
      - id
      type: object
    UploadFGAMConfigRequest:
      properties:
        configYAML:
          description: The FGAM configuration as a YAML string
          type: string
      required:
      - configYAML
      type: object
    UsageLimits:
      properties:
        provisionedVirtualCPUs:
          type: integer
        requestUnitLimit:
          type: integer
        storageMibLimit:
          type: integer
      type: object
  securitySchemes:
    auth:
      bearerFormat: Bearer token
      description: Token used for authentication.
      scheme: bearer
      type: http
