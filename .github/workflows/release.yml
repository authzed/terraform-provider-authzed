---
# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4.2.2
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        id: import_gpg
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          args: release --clean --release-notes=CHANGELOG.md
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
      - name: Notify Slack of release (success)
        if: ${{ success() }}
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: "${{ secrets.SLACK_WEBHOOK_URL }}"
          webhook-type: "incoming-webhook"
          payload: |
            text: ":white_check_mark: *Terraform Provider Release Succeeded!*"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: |
                    :white_check_mark: *Terraform Provider Release* succeeded!
                    *Tag pushed:* `${{ github.ref_name }}`
                    *Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>
                    *Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>
                    *Actor:* `${{ github.actor }}`
                    *Workflow:* `${{ github.workflow }}`

      - name: Notify Slack of release (failure)
        if: ${{ failure() }}
        uses: slackapi/slack-github-action@v2.1.1
        with:
          webhook: "${{ secrets.SLACK_WEBHOOK_URL }}"
          webhook-type: "incoming-webhook"
          payload: |
            text: ":x: *Terraform Provider Release Failed!*"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: |
                    :x: *Terraform Provider Release* failed.
                    *Tag pushed:* `${{ github.ref_name }}`
                    *Repository:* <https://github.com/${{ github.repository }}|${{ github.repository }}>
                    *Commit:* <https://github.com/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>
                    *Actor:* `${{ github.actor }}`
                    *Workflow:* `${{ github.workflow }}`
