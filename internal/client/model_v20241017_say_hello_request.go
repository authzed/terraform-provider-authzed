/*
some test API

this is a test API ![](https://commonmark.org/help/images/favicon.png)

API version: 
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// checks if the V20241017SayHelloRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V20241017SayHelloRequest{}

// V20241017SayHelloRequest struct for V20241017SayHelloRequest
type V20241017SayHelloRequest struct {
	Name *string `json:"name,omitempty"`
	Owner *string `json:"owner,omitempty"`
}

// NewV20241017SayHelloRequest instantiates a new V20241017SayHelloRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV20241017SayHelloRequest() *V20241017SayHelloRequest {
	this := V20241017SayHelloRequest{}
	return &this
}

// NewV20241017SayHelloRequestWithDefaults instantiates a new V20241017SayHelloRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV20241017SayHelloRequestWithDefaults() *V20241017SayHelloRequest {
	this := V20241017SayHelloRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V20241017SayHelloRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V20241017SayHelloRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V20241017SayHelloRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V20241017SayHelloRequest) SetName(v string) {
	o.Name = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *V20241017SayHelloRequest) GetOwner() string {
	if o == nil || IsNil(o.Owner) {
		var ret string
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V20241017SayHelloRequest) GetOwnerOk() (*string, bool) {
	if o == nil || IsNil(o.Owner) {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *V20241017SayHelloRequest) HasOwner() bool {
	if o != nil && !IsNil(o.Owner) {
		return true
	}

	return false
}

// SetOwner gets a reference to the given string and assigns it to the Owner field.
func (o *V20241017SayHelloRequest) SetOwner(v string) {
	o.Owner = &v
}

func (o V20241017SayHelloRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V20241017SayHelloRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Owner) {
		toSerialize["owner"] = o.Owner
	}
	return toSerialize, nil
}

type NullableV20241017SayHelloRequest struct {
	value *V20241017SayHelloRequest
	isSet bool
}

func (v NullableV20241017SayHelloRequest) Get() *V20241017SayHelloRequest {
	return v.value
}

func (v *NullableV20241017SayHelloRequest) Set(val *V20241017SayHelloRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableV20241017SayHelloRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableV20241017SayHelloRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV20241017SayHelloRequest(val *V20241017SayHelloRequest) *NullableV20241017SayHelloRequest {
	return &NullableV20241017SayHelloRequest{value: val, isSet: true}
}

func (v NullableV20241017SayHelloRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV20241017SayHelloRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


